aop		面向切面编程
	
	需要引入aspectj和aspectjweaver包，springboot不需要引入

	思想：aop就是采用横向抽取机制，对部分代码功能进行增强，是基于类的和接口的增强，避免代码的侵入和降低由于修改原始代码代理的风险，通过切入点，对方法进行增强

	常用的方式
		aspact	切面（用在类上）
		poincut 切入点（必须的，否则不知道对谁增强）
		before 前置通知 需要对切入点进行指定，可以用于次数统计，比如需要记录每天用户登录数量和记录哪些功能使用比较频繁
		AfterReturning 后置返回通知
		After 	后置最后通知
		AfterThrowing 后置异常通知
		Around 环绕通知

	实现原理
		基于jdk动态代理（仅支持接口代理）和cglib代理（支持接口和类的代理）



ioc		依赖倒转
	
	具体可以理解为一个存放类容器
