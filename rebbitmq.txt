消息方式
	
	简单模式：
		一个生产者对应一个队列，一个队列对应一个消费者

	任务队列（work queue）
		一个生产者对应一个队列，一个队列对应多个消费者，每个消费者收到的消息唯一
		功能：一个生产者，多个消费者，每个消费者获取到的消息唯一，多个消费者只有一个队列
		任务队列：避免立即做一个资源密集型任务，必须等待它完成，而是把这个任务安排到稍后再做。我们将任务封装为消息并将其发送给队列。后台运行的工作进程将弹出任务并最终执行作业。当有多个worker同时运行时，任务将在它们之间共享。

	发布/订阅模式 Publish/Subscribe
		功能：一个生产者发送的消息会被多个消费者获取。一个生产者、一个交换机、多个队列、多个消费者
		生产者：可以将消息发送到队列或者是交换机。
		消费者：只能从队列中获取消息。
		如果消息发送到没有队列绑定的交换机上，那么消息将丢失。
		交换机不能存储消息，消息存储在队列中

	路由模式Routing
		生产者发送消息到交换机并且要指定路由key，消费者将队列绑定到交换机时需要指定路由key

	通配符模式Topic
		说明：生产者P发送消息到交换机X，type=topic，交换机根据绑定队列的routing key的值进行通配符匹配；
		符号#：匹配一个或者多个词 lazy.# 可以匹配 lazy.irs或者lazy.irs.cor
		符号*：只能匹配一个词 lazy.* 可以匹配 lazy.irs或者lazy.cor

	三种类型交换器 Fanout,Direct,Topic

	Fanout Exchange（广播效果）
  	不处理路由键。你只需要简单的将队列绑定到交换机上。一个发送到交换机的消息都会被转发到与该交换机绑定的所有队列上。很像子网广播，每台子网内的主机都获得了一份复制的消息。Fanout交换机转发消息是最快的。

  	Direct Exchange （指定路由队列上）
  	处理路由键。需要将一个队列绑定到交换机上，要求该消息与一个特定的路由键完全匹配。这是一个完整的匹配。如果一个队列绑定到该交换机上要求路由键 “test”，则只有被标记为“test”的消息才被转发，不会转发test.aaa，也不会转发dog.123，只会转发test

  	Topic Exchange （对所有关注routekey中指定话题的队列上）
	将路由键和某模式进行匹配。此时队列需要绑定要一个模式上。符号“#”匹配一个或多个词，符号“*”匹配不多不少一个词。因此“audit.#”能够匹配到“audit.irs.corporate”，但是“audit.*” 只会匹配到“audit.irs”。