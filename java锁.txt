java锁信息
	锁的状态
		新建
		就绪
		运行
		阻塞
		死亡

重入锁
	ReentrantLock，synchronized
	重入锁指的是，当线程在执行锁操作时，发现在下一个执行方法中还有锁的存在，此时线程不再申请锁，而是直接执行第二个锁的方法
中断锁
	ReentrantLock
	当线程B执行遇到锁时，发现另外一个线程A持有线程锁的时间较长时，线程A不想继续等待时，线程B可以选择中断自己或者在别的线程中中断他
公平锁
	ReentrantLock
	当有多个线程在等待时，根据等待时长较长的线程优先获取锁，在创建构造方法时传入true时为公平锁，因为该类中有两个内部类，一个是公平锁fairsync，一个非公平锁NonfairSync

	ReentrantLock中的几个获取锁的方法
	lock
	等待线程拿到锁为止，否则一直等待
	trylock
	有锁就拿，没有锁直接返回false
	trylock(时间)
	有锁就拿，没有锁就等待给定的时间，超出时间放弃获取锁
自旋锁
	
读写锁	
	ReadWriteLock的实现
	
